
services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/db_wp_password
    secrets:
      - db_root_password
      - db_wp_password
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./requirements/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wp-network
        
  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    restart: always
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_wp_password
    secrets:
      - db_wp_password
    depends_on:
      - mariadb
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - wp-network

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./requirements/nginx/conf:/etc/nginx/conf.d:rw
      - wordpress_data:/var/www/html:ro
    networks:
      - wp-network
    depends_on:
      - wordpress

networks:
  wp-network:
    name: wp-network
    driver: bridge

volumes:
  mariadb_data:
  wordpress_data:

secrets:
  db_root_password:
    file: ../secrets/db_root_password.txt
  db_wp_password:
    file: ../secrets/db_wp_password.txt
